// src/services/companyService.jsimport { rapidapiClient } from '../rapidapiClient.js';import { config } from '../config.js';/** * Step 1: Get the numeric company_id *    via GET /api/v1/company/profile?company=<companyName> */export async function lookupCompanyId(companyName) {  try {    const resp = await rapidapiClient.get('/api/v1/company/profile', {      params: { company: companyName },    });    // resp.data.data is the company object    const company = resp.data.data;    return company?.id ?? null;  } catch (err) {    console.error(      'lookupCompanyId error:',      err.response?.status,      err.response?.data || err.message    );    throw new Error('Company lookup failed');  }}/** * Step 2: Fetch employees by that ID *    via GET /api/v1/company/people?company_id=<id>&page=1 */export async function fetchEmployeesByCompanyId(companyId) {  try {    const resp = await rapidapiClient.get('/api/v1/company/people', {      params: { company_id: companyId, page: 1 },    });    return resp.data.data || [];  } catch (err) {    console.error(      'fetchEmployeesByCompanyId error:',      err.response?.status,      err.response?.data || err.message    );    throw new Error('Employee fetch failed');  }}/** * Public function used by POST /search * 1) lookupCompanyId * 2) fetchEmployeesByCompanyId * 3) filter by title keywords * 4) map to { name, jobTitle, linkedinProfileUrl } and limit */export async function findEmployeesByTitles(companyName, titles) {  const companyId = await lookupCompanyId(companyName);  if (!companyId) {    console.warn(`No company_id found for "${companyName}"`);    return [];  }  const people = await fetchEmployeesByCompanyId(companyId);  const filtered = people.filter((p) => {    if (!p.title) return false;    const lowerTitle = p.title.toLowerCase();    return titles.some((kw) => lowerTitle.includes(kw.toLowerCase()));  });  return filtered    .slice(0, config.maxResults)    .map((p) => ({      name: p.full_name,      jobTitle: p.title,      linkedinProfileUrl: p.url,    }));}